name: Run Django Tests
on:
    pull_request:
        branches: [main]
    push:
        branches: [main, dev]
jobs:
    test-django-app:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ["3.10"]
        steps:
            - uses: actions/checkout@v3
              with:
                    fetch-depth: 0

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                    python-version: ${{ matrix.python-version }}

            - name: install Dependencies
              run: |
                    python -m pip install --upgrade pip
                    if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                    if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

            - name: Doing application tests
              run: |
                    pytest

            - name: "Download coverage data"
              uses: actions/download-artifact@v3
              with:
                    name: covdata

            - name: "Combine"
              run: |
                    python -m tox coverage
                    export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
                    echo "total=$TOTAL" >> $GITHUB_ENV
                    echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY

            - name: "Make badge"
              uses: schneegans/dynamic-badges-action@v1.7.0
              with:
                    # GIST_TOKEN is a GitHub personal access token with scope "gist"
                    auth: ${{ secrets.GIST_TOKEN }}
                    gistID: gistblogmodel
                    filename: covbadge.json
                    label: coverage
                    message: ${{ env.total }}%
                    minColorRange: 50
                    maxColorRange: 90
                    valColorRange: ${{ env.total }}

            - name: Run pre-commit hooks
              uses: pre-commit/action@v3.0.0
              with:
                    extra_args: --all-files
