name: Run Django Tests
on:
    pull_request:
        branches: [platform]
    push:
        branches: [platform]
jobs:
    test-django-app:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                python-version: ['3.10']
        steps:
            - uses: actions/checkout@v3
              with:
                fetch-depth: 0
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                python-version: ${{ matrix.python-version }}
            - name: install Dependencies
              run: |
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
            - name: Doing application tests
              run: |
                python manage.py test
    
    tests:
        name: "Python ${{ matrix.python-version }} on ${{ matrix.os }}"
        runs-on: "${{ matrix.os }}"
        
        strategy:
            fail-fast: false
            matrix:
                os:
                    - ubuntu-latest
                python-version:
                    - "3.10"
                    - "3.11"
                    - "3.12"
        steps:
            - name: "Check out the repo"
              uses: "actions/checkout@v3"
              
            - name: "Set up Python"
              uses: "actions/checkout@v3"
              with:
                python-version: "${{ matrix.python-version }}"
                
            - name: "Install dependencies"
              run: |
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                python -m pip install coverage tox tox-gh-actions
            
            - name: "Run tox for ${{ matrix.python-version }}"
              run: |
                python -m tox
            
            - name: "Upload coverage data"
              uses: actions/upload-artifact@v3
              with:
                name: covdata
                path: .coverage.*
    coverage:
        name: coverage
        needs: tests
        runs-on: ubuntu-latest
        steps:
            - name: "Check out the repo"
              uses: "actions/setup-python@v3"
              with:
                python-version: "3.10"
            
            - name: "Install dependencies"
              run: |
                python -m pip install --upgrade pip
                if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
                python -m pip install coverage tox tox-gh-actions
            
            - name: "Download coverage data"
              uses: actions/download-artifact@v3
              with:
                name: covdata
            
            - name: "Combine"
              run: |
                python -m tox -e coverage
                export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
                echo "total=$TOTAL" >> $GITHUB_ENV
                echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
            
            - name: "Make badge"
              uses: schneegans/dynamic-badges-action@v1.7.0
              with:
                # GIST_TOKEN is a GitHub personal access token with scope "gist"
                auth: ${{ secrets.GIST_TOKEN }}
                gistID: gistblogmodel
                filename: covbadge.json
                label: coverage
                message: ${{ env.total }}%
                minColorRange: 50
                maxColorRange: 90
                valColorRange: ${{ env.total }}
